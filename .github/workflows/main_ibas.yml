# # Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# # More GitHub Actions for Azure: https://github.com/Azure/actions
# # More info on Python, GitHub Actions, and Azure App Service: https://aka.ms/python-webapps-actions

# name: Build and deploy Python app to Azure Web App - IBAS

# on:
#   push:
#     branches:
#       - main
#   workflow_dispatch:

# jobs:
#   build:
#     runs-on: ubuntu-latest

#     steps:
#       - uses: actions/checkout@v4

#       - name: Set up Python version
#         uses: actions/setup-python@v1
#         with:
#           python-version: "3.12"

#       - name: Create and start virtual environment
#         run: |
#           python -m venv venv
#           source venv/bin/activate

#       - name: Install dependencies
#         run: pip install -r requirements.txt

#       # Optional: Add step to run tests here (PyTest, Django test suites, etc.)

#       - name: Zip artifact for deployment
#         run: zip release.zip ./* -r

#       - name: Upload artifact for deployment jobs
#         uses: actions/upload-artifact@v3
#         with:
#           name: python-app
#           path: |
#             release.zip
#             !venv/

#   deploy:
#     runs-on: ubuntu-latest
#     needs: build
#     environment:
#       name: "Production"
#       url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
#     permissions:
#       id-token: write #This is required for requesting the JWT

#     steps:
#       - name: Download artifact from build job
#         uses: actions/download-artifact@v3
#         with:
#           name: python-app

#       - name: Unzip artifact for deployment
#         run: unzip release.zip

#       - name: Login to Azure
#         uses: azure/login@v1
#         with:
#           client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_EC0CB32197C8476EA15881FD297B2FB4 }}
#           tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_24060F42CBA04E1F87F7A7C7B7A1AA5B }}
#           subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_C4FDF41AA1F7400D97512E86211B27B4 }}

#       - name: "Deploy to Azure Web App"
#         uses: azure/webapps-deploy@v2
#         id: deploy-to-webapp
#         with:
#           app-name: "IBAS"
#           slot-name: "Production"

#       - name: Set environment variables
#         run: |
#           echo "AZURE_COSMOS_CONNECTIONSTRING=${{ secrets.AZURE_COSMOS_CONNECTIONSTRING }}" >> $GITHUB_ENV
#           echo "WEATHER_API_KEY=${{ secrets.WEATHER_API_KEY }}" >> $GITHUB_ENV
#           echo "SECRET_KEY=${{ secrets.SECRET_KEY }}" >> $GITHUB_ENV
#           echo "WEATHER_API_KEY=${{ secrets.WEATHER_API_KEY }}" >> $GITHUB_ENV
name: Deploy Flask App to Azure

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.8"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Set environment variables
        run: |
          echo "WEATHER_API_URL=${{ secrets.WEATHER_API_URL }}" >> $GITHUB_ENV
          echo "WEATHER_API_KEY=${{ secrets.WEATHER_API_KEY }}" >> $GITHUB_ENV
          echo "AZURE_COSMOS_CONNECTIONSTRING=${{ secrets.AZURE_COSMOS_CONNECTIONSTRING }}" >> $GITHUB_ENV

      - name: Log in to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Deploy to Azure using CLI
        env:
          WEATHER_API_URL: ${{ secrets.WEATHER_API_URL }}
          WEATHER_API_KEY: ${{ secrets.WEATHER_API_KEY }}
          AZURE_COSMOS_CONNECTIONSTRING: ${{ secrets.AZURE_COSMOS_CONNECTIONSTRING }}
        run: |
          az webapp up --name ibas --resource-group myResourceGroup --runtime "PYTHON:3.8"
